#!/usr/bin/env ruby

require "rubygems"
require "exfe_cli"
require "commander/import"

program :version, ExfeCli::VERSION
program :description, ExfeCli::DESCRIPTION

include ExfeCli::CliHelper

def authenticated?
  File.exists?(config_file_path) && auth_token && auth_token.length > 0
end

def ask_for_credentials
  begin
    identity = ask("Identity: ")
    password = ask("Password: ") { |q| q.echo = false }
    data = ExfeCli::Engine.login(identity, password)
    puts 'Identity & password mismatch.' unless data
  end until data
  open(config_file_path, 'w') { |f| f.write data.to_yaml }
end

ask_for_credentials unless authenticated?

command :crosses do |c|
  c.syntax = 'exfe crosses'
  c.description = 'list my crosses'
  c.action do |args, options|
    ExfeCli::Engine.crosses.each { |cross| puts cross[:id].ljust(8) + cross[:title] }
  end
end

command :cross do |c|
  c.syntax = 'exfe cross CROSS_ID'
  c.description = 'view a cross'
  c.action do |args, options|
    cross = ExfeCli::Engine.cross args.first
    puts "#{cross[:title].upcase} - #{cross[:description]}"
    puts "#{extract_place(cross)} at #{cross[:begin_at]}"
    puts
    cross[:conversations].reverse.each do |conv|
      puts "#{Time.parse(conv[:created_at] + " UTC").localtime} #{conv[:identity][:name]}:"
      puts conv[:message]
      puts
    end
  end
end

def extract_place(cross)
  "#{cross[:place][:line1]}, #{cross[:place][:line2]}"
end

command :profile do |c|
  c.syntax = 'exfe profile'
  c.description = 'view my profile'
  c.action do |args, options|
    profile = ExfeCli::Engine.profile
    puts "Name: #{profile[:user][:name]}"
    puts "Identities:"
    profile[:identities].each do |identity|
      puts identity[:provider].ljust(10) + identity[:external_username]
    end
  end
end

alias_command :s, :crosses
alias_command :p, :profile
alias_command :c, :cross

default_command :crosses